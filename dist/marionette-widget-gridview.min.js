Backbone.Widget=Backbone.Model.extend({defaults:{type:"default",viewType:"WidgetView",name:"noname",x:0,y:0,width:0,height:0,widgetId:0},getGridstackAttributes:function(){return{id:this.get("widgetId"),x:this.get("x"),y:this.get("y"),width:this.get("width"),height:this.get("height"),el:'<div class="grid-stack-item"><div id="'+this.get("widgetId")+'" class="grid-stack-item-content"></div></div>'}},isDefaultView:function(){return this.get("viewType")===this.getDefaultView()},getDefaultView:function(){return"WidgetView"}}),Backbone.WidgetList=Backbone.Collection.extend({model:Backbone.Widget}),Marionette.WidgetView=Marionette.ItemView.extend({template:_.template('<div class="some-widget"><p>default view</p></div>'),modelEvents:{change:"render"},onRender:function(){this.$el=this.$el.children(),this.$el.unwrap(),this.setElement(this.$el)},onRemove:function(){this.trigger("removeWidget",this.model)}}),Marionette.WidgetGridView=Marionette.LayoutView.extend({template:"#gridview-template",collectionEvents:{add:"addWidgetView",remove:"removeWidgetView",reset:"resetWidgetViews"},initialize:function(a){if(a=a||{},a.gsOptions=a.gsOptions||{},a.hasOwnProperty("autoPos")||(a.autoPos=!0),!a.collection)throw new Error("Missing collection inside initialization options");this.options=a},setAutoPos:function(a){this.options.autoPos=a},onRender:function(){this.initializeGridstack()},initializeGridstack:function(){this.gridstack&&this.gridstack.remove_all(),this.$(".grid-stack").gridstack(this.options.gsOptions),this.gridstack=this.$(".grid-stack").data("gridstack"),this.$(".grid-stack").on("change",_.bind(this.updateAllWidgetsAttributes,this)),this.repopulateWidgetViews()},removeWidget:function(a){a.destroy()},addWidgetView:function(a){var b=a.getGridstackAttributes();this.gridstack.will_it_fit(b.x,b.y,b.width,b.height,this.options.autoPos)?(this.gridstack.add_widget(b.el,b.x,b.y,b.width,b.height,this.options.autoPos),this.options.autoPos?this.updateWidgetAttributesById(b.id):a.save(),this.addRegion(b.id,"#"+b.id),this.showWidget(a)):alert("Not enough free space to place the widget id : "+b.id)},removeWidgetView:function(a){var b=a.get("widgetId"),c=this.$("#"+b).closest(".grid-stack-item");this.removeRegion(b),this.gridstack.remove_widget(c),this.updateAllWidgetsAttributes()},resetWidgetViews:function(){this.gridstack.remove_all(),this.repopulateWidgetViews()},repopulateWidgetViews:function(){if(this.collection.length){var a=this;this.getRegionManager().removeRegions(),this.collection.each(function(b){a.addWidgetView(b)})}},showWidget:function(a){var b=this.getViewToShow(a);this.listenTo(b,"removeWidget",this.removeWidget),this.getRegion(a.get("widgetId")).show(b)},getViewToShow:function(a){var b;return this.options.customViews&&this.options.customViews[a.get("viewType")]?b=new(this.options.customViews[a.get("viewType")])({model:a}):(a.isDefaultView()||a.set("viewType",a.getDefaultView()).save(),b=new Marionette.WidgetView({model:a})),b},updateAllWidgetsAttributes:function(){var a=this;this.collection.each(function(b){a.updateWidgetAttributesById(b.get("widgetId"))})},updateWidgetAttributesById:function(a){var b=this.$("#"+a).closest(".grid-stack-item");this.collection.findWhere({widgetId:a}).set({x:b.attr("data-gs-x"),y:b.attr("data-gs-y"),width:b.attr("data-gs-width"),height:b.attr("data-gs-height")}).save()}});